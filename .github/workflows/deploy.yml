name: Build and Deploy Full Application

on:
  push:
    branches:
      - main

jobs:
  # --- JOB 1: Build and Deploy the WASM Frontend ---
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain with wasm32 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache Cargo build directories
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wasm-bindgen-cli if not present
        run: |
          if ! command -v wasm-bindgen &> /dev/null
          then
              cargo install wasm-bindgen-cli
          else
              echo "wasm-bindgen already exists, skipping installation."
          fi

      - name: Build WASM binary
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Create 'static' directory and package files
        run: |
          mkdir static
          wasm-bindgen --out-dir static --target web target/wasm32-unknown-unknown/release/molecular_dynamics.wasm
          cp -r assets static/

      - name: Copy index.html
        run: cp index.html static/

      - name: Clean destination directory on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: md.fedor.ee
          username: fedor
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: rm -rf /var/www/md.fedor.ee/*

      - name: Debug - show what we're copying
        run: |
          echo "Contents of current directory:"
          ls -la
          echo "Contents of static directory:"
          ls -la static/
          echo "Tree view:"
          tree static/ || find static/ -type f

      - name: Copy files to server via scp
        uses: appleboy/scp-action@v0.1.7
        with:
          host: md.fedor.ee
          username: fedor
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./static/*"
          target: "/var/www/md.fedor.ee"
          strip_components: 1

      - name: Debug - check what was copied
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: md.fedor.ee
          username: fedor
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Contents of /var/www/md.fedor.ee:"
            ls -la /var/www/md.fedor.ee/
            echo "Full tree:"
            find /var/www/md.fedor.ee/ -type f

  # --- JOB 2: Deploy the API Backend ---
  deploy-api:
    runs-on: ubuntu-latest
    # This job runs in parallel with the frontend deploy
    steps:
      - name: Deploy API update to DigitalOcean
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: md.fedor.ee
          username: fedor
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # This script runs on your server
            # 1. Navigate to the project directory
            cd /home/fedor/bevy_md_sim

            # 2. Pull the latest code changes from GitHub
            git pull origin main

            # 3. Re-build the 'api' docker image if its source has changed
            docker compose build api

            # 4. Restart services. `up -d` is smart and will only
            #    recreate containers whose images have been updated.
            docker compose up -d

            # 5. (Optional but Recommended) Clean up old, unused Docker images
            docker image prune -f
            echo "API deployment complete!"
