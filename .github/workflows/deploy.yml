name: Build and Deploy Bevy Frontend

# This workflow runs on every push to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  # --- JOB 1: Build the WASM Application ---
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain with wasm32 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: Build WASM binary in release mode
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Create 'static' directory for web files
        run: mkdir static

      - name: Run wasm-bindgen
        run: |
          wasm-bindgen --out-dir static --target web \
            target/wasm32-unknown-unknown/release/molecular_dynamics.wasm

      - name: Copy assets into the static directory
        run: cp -r assets static/

      - name: Create index.html
        run: |
          # This creates the index.html file needed to run the app
          cat > static/index.html <<- EOM
          <!DOCTYPE html>
          <html>
            <head>
              <meta charset="utf-8" />
              <title>Molecular Dynamics Simulation</title>
              <style>
                body { margin: 0; background-color: black; }
                canvas#bevy { width: 100vw; height: 100vh; }
              </style>
            </head>
            <body>
              <canvas id="bevy"></canvas>
              <script>
                const SAVE_TIMESTAMP_KEY = "simulation_save_timestamp";
                function js_save_to_localstorage(key, value) { window.localStorage.setItem(key, value); window.localStorage.setItem(SAVE_TIMESTAMP_KEY, new Date().toISOString()); }
                function js_load_from_localstorage(key) { return window.localStorage.getItem(key); }
                function js_get_save_timestamp() { return window.localStorage.getItem(SAVE_TIMESTAMP_KEY); }
              </script>
              <script type="module">
                import init from './molecular_dynamics.js';
                init();
              </script>
            </body>
          </html>
          EOM

      - name: Upload the 'static' directory as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: static-site-files
          path: static/

  # --- JOB 2: Deploy the files to the server ---
  deploy:
    runs-on: ubuntu-latest
    needs: build # This job only runs if the 'build' job succeeds

    steps:
      - name: Download the site files artifact
        uses: actions/download-artifact@v4
        with:
          name: static-site-files

      - name: Deploy to DigitalOcean Droplet via rsync
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: md.fedor.ee # Use your domain name
          username: fedor # Your user on the server
          key: ${{ secrets.SSH_PRIVATE_KEY }} # The secret you created
          script: |
            # This script runs on your server
            # rsync is a very efficient way to transfer files.
            # It will delete old files from the destination that are not in the source.
            rsync -avz --delete ./ /var/www/md.fedor.ee/
            echo "Deployment to md.fedor.ee complete!"
